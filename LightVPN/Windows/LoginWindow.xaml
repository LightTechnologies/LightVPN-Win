<Window
    x:Class="LightVPN.Windows.LoginWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:LightVPN"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="window"
    Title="LightVPN"
    Width="308"
    Height="435"
    AllowsTransparency="True"
    Background="{DynamicResource MaterialDesignPaper}"
    Closing="Window_Closing"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Foreground="Black"
    Loaded="Window_Loaded"
    ResizeMode="NoResize"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <BeginStoryboard x:Key="CloseAnim">
            <Storyboard Completed="FinishedClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(FrameworkElement.Width)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="308">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="00:00:00.400" Value="290">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(FrameworkElement.Height)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="435">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="00:00:00.400" Value="350">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
        <Storyboard x:Key="OpenAnim">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="290">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.400" Value="308">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="435">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.400" Value="435">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OpenAnim}" />
        </EventTrigger>
    </Window.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="37"
            CornerRadius="0,0,0,0"
            GlassFrameThickness="0"
            ResizeBorderThickness="7"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Border Name="Border" Style="{StaticResource WindowBorder}">
        <Border.Background>
            <ImageBrush ImageSource="/Windows/background.png"/>
        </Border.Background>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <Grid
                Name="TopBar"
                Height="32"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top">
                <Grid.Background>
                    <ImageBrush/>
                </Grid.Background>
                <StackPanel
                    Width="95"
                    Height="32"
                    Margin="213,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Width="47"
                        materialDesign:RippleAssist.Feedback="#DD000000"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Click="CaptionButtons_Click"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Minimize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowMinimize" />
                    </Button>
                    <Button
                        Width="47"
                        materialDesign:RippleAssist.Feedback="#DDC80000"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Click="CaptionButtons_Click"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Close"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowClose" />
                    </Button>
                </StackPanel>
            </Grid>
            <Frame
                Name="MainFrame"
                NavigationUIVisibility="Hidden" Margin="0,0,0,-371" Grid.Row="1" >
                <Frame.Background>
                    <ImageBrush/>
                </Frame.Background>
            </Frame>
            <materialDesign:Snackbar
                x:Name="MainSnackbar"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                MessageQueue="{materialDesign:MessageQueue}" Height="5" Margin="0,426,0,0" RenderTransformOrigin="0.5,0.5" >
                <materialDesign:Snackbar.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleY="-1"/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </materialDesign:Snackbar.RenderTransform>
            </materialDesign:Snackbar>
        </Grid>
    </Border>
</Window>
