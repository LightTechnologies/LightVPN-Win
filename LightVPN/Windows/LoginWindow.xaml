<Window
    x:Class="LightVPN.Windows.LoginWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:LightVPN"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:LightVPN.ViewModels"
    x:Name="window"
    Title="LightVPN"
    Width="308"
    Height="435"
    Closing="Window_Closing"
    Loaded="Window_Loaded"
    ResizeMode="NoResize"
    Style="{StaticResource LightUIWindow}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.DataContext>
        <viewModels:LoginWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <BeginStoryboard x:Key="CloseAnim">
            <Storyboard Completed="FinishedClosingAnimation">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
        <Storyboard x:Key="OpenAnim">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="20">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <QuinticEase EasingMode="EaseInOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Window.Loaded">
            <BeginStoryboard Storyboard="{StaticResource OpenAnim}" />
        </EventTrigger>
    </Window.Triggers>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="32"
            CornerRadius="0,0,0,0"
            GlassFrameThickness="0"
            ResizeBorderThickness="7"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Border Name="Border" Style="{StaticResource WindowBorder}">
        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="32" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid
                Name="TopBar"
                Height="32"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top">
                <StackPanel
                    Width="95"
                    Height="32"
                    Margin="213,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Width="47"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Click="CaptionButtons_Click"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Minimize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowMinimize" />
                    </Button>
                    <Button
                        Width="47"
                        materialDesign:RippleAssist.Feedback="#DDC80000"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Click="CaptionButtons_Click"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Close"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowClose" />
                    </Button>
                </StackPanel>
            </Grid>
            <Frame
                Name="MainFrame"
                Grid.Row="1"
                NavigationUIVisibility="Hidden" />
            <materialDesign:Snackbar
                x:Name="MainSnackbar"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
                MessageQueue="{materialDesign:MessageQueue}" />
        </Grid>
    </Border>
</Window>
