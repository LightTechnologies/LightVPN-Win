<Window
    x:Class="LightVPN.Windows.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:lightvpn="clr-namespace:LightVPN"
    xmlns:local="clr-namespace:LightVPN.Windows"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:LightVPN.ViewModels"
    Title="LightVPN"
    Width="550"
    Height="420"
    MinWidth="550"
    MinHeight="420"
    d:DataContext="{d:DesignInstance Type=viewModels:MainWindowViewModel}"
    StateChanged="MainWindowStateChanged"
    Style="{StaticResource LightUIWindow}"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.DataContext>
        <viewModels:MainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <BeginStoryboard x:Key="LoadView">
            <Storyboard>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
        <BeginStoryboard x:Key="UnloadView">
            <Storyboard Completed="UnloadCompleted">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="20">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <QuinticEase EasingMode="EaseInOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </BeginStoryboard>
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="35"
            CornerRadius="0,0,0,0"
            GlassFrameThickness="0"
            NonClientFrameEdges="None"
            ResizeBorderThickness="7"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <Border Style="{StaticResource WindowBorder}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Image
                    Name="titleBarImage"
                    Margin="7"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Source="/Resources/lightvpn-purple-title.png" />
                <StackPanel
                    HorizontalAlignment="Right"
                    VerticalAlignment="Stretch"
                    Orientation="Horizontal">
                    <Button
                        Name="optionsButton"
                        Width="50"
                        materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignBody}"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Cursor="Arrow"
                        ToolTip="Options"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction
                                    PropertyName="PlacementTarget"
                                    TargetObject="{Binding ContextMenu, ElementName=optionsButton}"
                                    Value="{Binding ElementName=optionsButton, Mode=OneWay}" />
                                <ei:ChangePropertyAction
                                    PropertyName="IsOpen"
                                    TargetObject="{Binding ContextMenu, ElementName=optionsButton}"
                                    Value="True" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="MoreVert" />
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="SettingsMenuItem">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="SettingsOutline" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        Settings
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem>
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Logout" />
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        Sign out
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button
                        Width="50"
                        materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignBody}"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Command="{Binding MinimizeWindowCommand}"
                        Cursor="Arrow"
                        ToolTip="Minimize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowMinimize" />
                    </Button>
                    <Button
                        Width="50"
                        materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignBody}"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Command="{Binding ToggleMaximizeWindowCommand}"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Maximize"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon
                            Name="MaxIcon"
                            Foreground="{DynamicResource MaterialDesignBody}"
                            Kind="WindowMaximize" />
                    </Button>
                    <Button
                        Width="50"
                        materialDesign:RippleAssist.Feedback="#DDC80000"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        Command="{Binding HideWindowCommand}"
                        Cursor="Arrow"
                        Foreground="White"
                        ToolTip="Close"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="WindowClose" />
                    </Button>
                </StackPanel>
            </Grid>
            <Grid
                x:Name="grid"
                Grid.Row="1"
                RenderTransformOrigin="0.5,0.5">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Grid.RenderTransform>
                <Frame Name="MainFrame" NavigationUIVisibility="Hidden" />
            </Grid>
        </Grid>
    </Border>
</Window>